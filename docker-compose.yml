version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rayochat_postgres
    environment:
      POSTGRES_DB: rayochat
      POSTGRES_USER: rayochat_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rayochat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rayochat_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    container_name: rayochat_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rayochat_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rayochat_backend
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_KEY: ${APP_KEY}
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: rayochat
      DB_USERNAME: rayochat_user
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
      MAIL_MAILER: ${MAIL_MAILER}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: "RayoChat"
      RAG_SERVICE_URL: http://rag:8000
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - storage_data:/var/www/html/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rayochat_network

  # Laravel Queue Worker
  queue:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rayochat_queue
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=300
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_KEY: ${APP_KEY}
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: rayochat
      DB_USERNAME: rayochat_user
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
      RAG_SERVICE_URL: http://rag:8000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./backend:/var/www/html
      - storage_data:/var/www/html/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rayochat_network
    restart: unless-stopped

  # Python RAG Service
  rag:
    build:
      context: ./rag-service
      dockerfile: Dockerfile
    container_name: rayochat_rag
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATABASE_URL: postgresql://rayochat_user:${DB_PASSWORD}@postgres:5432/rayochat
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    volumes:
      - ./rag-service:/app
      - storage_data:/app/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rayochat_network
    restart: unless-stopped

networks:
  rayochat_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  storage_data:
